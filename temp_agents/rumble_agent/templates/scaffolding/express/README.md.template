# {{project_name}}

A modern Express.js application generated by Rumble.

## Features

- Modern Express.js project structure
- Environment configuration with dotenv
- Security with helmet and CORS
- Request logging with morgan
- Error handling middleware
- Compression for improved performance
{{#mongodb}}
- MongoDB integration with Mongoose
{{/mongodb}}
{{#postgres}}
- PostgreSQL integration
{{/postgres}}
{{#jwt}}
- Authentication with JWT
{{/jwt}}
{{#swagger}}
- API documentation with Swagger
{{/swagger}}
{{#typescript}}
- TypeScript support
{{/typescript}}

## Prerequisites

- Node.js (v16.x or higher)
- npm or yarn
{{#mongodb}}
- MongoDB (local or remote)
{{/mongodb}}
{{#postgres}}
- PostgreSQL (local or remote)
{{/postgres}}

## Installation

1. Clone the repository:
```bash
git clone <repository-url>
cd {{project_name}}
```

2. Install dependencies:
```bash
npm install
# or
yarn install
```

3. Set up environment variables:
```bash
cp .env.example .env
# Edit .env with your configuration
```

4. Start the development server:
```bash
npm run dev
# or
yarn dev
```

The server will be running at http://localhost:3000

## Project Structure

```
{{project_name}}/
{{#typescript}}
├── src/                    # Source code
│   ├── controllers/        # Route controllers
│   ├── models/             # Database models
│   ├── routes/             # Route definitions
│   ├── middleware/         # Custom middleware
│   ├── utils/              # Utility functions
│   ├── config/             # Configuration files
│   └── server.ts           # Server entry point
├── dist/                   # Compiled JavaScript
{{/typescript}}
{{^typescript}}
├── controllers/            # Route controllers
├── models/                 # Database models
├── routes/                 # Route definitions
├── middleware/             # Custom middleware
├── utils/                  # Utility functions
├── config/                 # Configuration files
├── app.js                  # Express application
├── server.js               # Server entry point
{{/typescript}}
├── public/                 # Static files
├── logs/                   # Log files
├── tests/                  # Test files
├── .env                    # Environment variables
├── .env.example            # Example environment variables
{{#typescript}}
├── tsconfig.json           # TypeScript configuration
{{/typescript}}
├── package.json            # Project dependencies
└── README.md               # This file
```

## Development

### API Endpoints

The API is available at `/api`:

- `GET /api/health`: Health check endpoint
- `GET /api/v1/items`: Get all items
- `GET /api/v1/items/:id`: Get a specific item
- `POST /api/v1/items`: Create a new item
- `PUT /api/v1/items/:id`: Update an item
- `DELETE /api/v1/items/:id`: Delete an item
{{#jwt}}
- `POST /api/v1/auth/login`: User login
- `POST /api/v1/auth/register`: User registration
- `GET /api/v1/auth/profile`: Get user profile (requires authentication)
{{/jwt}}

### Running Tests

```bash
npm test
# or
yarn test
```

{{#typescript}}
### Building for Production

```bash
npm run build
# or
yarn build
```
{{/typescript}}

## Deployment

### Production Settings

Before deploying to production, make sure to:

1. Set the `NODE_ENV` to `production` in `.env`
2. Configure a proper `JWT_SECRET` (if using JWT)
3. Set up a production database
4. Configure logging appropriately

### Deployment Options

- **Heroku**: Use the Procfile included in this project
- **Docker**: Use the provided Dockerfile and docker-compose.yml
- **AWS/GCP/Azure**: Follow cloud-specific Node.js deployment guides
- **Traditional hosting**: Set up with PM2 and Nginx

## Contributing

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/amazing-feature`)
3. Commit your changes (`git commit -m 'Add some amazing feature'`)
4. Push to the branch (`git push origin feature/amazing-feature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the LICENSE file for details.

## Acknowledgments

- Express.js - https://expressjs.com/
{{#mongodb}}
- Mongoose - https://mongoosejs.com/
{{/mongodb}}
{{#jwt}}
- jsonwebtoken - https://github.com/auth0/node-jsonwebtoken
{{/jwt}}
- Rumble
