"""
Configuration for {{project_name}} Flask application.

Generated by Rumble.
"""

import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

class Config:
    """Base configuration."""
    
    # Flask
    SECRET_KEY = os.environ.get('SECRET_KEY', 'dev-key-please-change-in-production')
    FLASK_APP = os.environ.get('FLASK_APP', 'app.py')
    FLASK_ENV = os.environ.get('FLASK_ENV', 'development')
    
    # API
    API_PREFIX = '/api'
    
    # Security
    SESSION_COOKIE_HTTPONLY = True
    REMEMBER_COOKIE_HTTPONLY = True
    REMEMBER_COOKIE_DURATION = 3600
    
    # Static files
    STATIC_FOLDER = 'static'
    TEMPLATES_FOLDER = 'templates'
    
    {{#sqlalchemy}}
    # Database
    SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL', 'sqlite:///app.db')
    SQLALCHEMY_TRACK_MODIFICATIONS = False
    {{/sqlalchemy}}
    
    {{#jwt}}
    # JWT
    JWT_SECRET_KEY = os.environ.get('JWT_SECRET_KEY', 'jwt-secret-key-please-change-in-production')
    JWT_ACCESS_TOKEN_EXPIRES = 3600  # 1 hour
    {{/jwt}}
    
    {{#cors}}
    # CORS
    CORS_HEADERS = 'Content-Type'
    {{/cors}}

class DevelopmentConfig(Config):
    """Development configuration."""
    
    DEBUG = True
    {{#sqlalchemy}}
    SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL', 'sqlite:///dev.db')
    {{/sqlalchemy}}

class TestingConfig(Config):
    """Testing configuration."""
    
    TESTING = True
    DEBUG = True
    {{#sqlalchemy}}
    SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL', 'sqlite:///test.db')
    {{/sqlalchemy}}
    WTF_CSRF_ENABLED = False

class ProductionConfig(Config):
    """Production configuration."""
    
    DEBUG = False
    TESTING = False
    
    # Security
    SESSION_COOKIE_SECURE = True
    REMEMBER_COOKIE_SECURE = True
    
    {{#sqlalchemy}}
    # Database - use PostgreSQL in production
    SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL', 'postgresql://user:password@localhost/dbname')
    {{/sqlalchemy}}

# Configuration dictionary
config_by_name = {
    'development': DevelopmentConfig,
    'testing': TestingConfig,
    'production': ProductionConfig,
    'default': DevelopmentConfig
}

# Get configuration by name
def get_config(config_name='default'):
    """Get configuration by name."""
    return config_by_name.get(config_name, config_by_name['default'])
