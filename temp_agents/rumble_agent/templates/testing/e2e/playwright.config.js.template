{{#typescript}}
import { defineConfig, devices } from '@playwright/test';

/**
 * Playwright configuration for end-to-end testing
 * Generated by Rumble
 */
export default defineConfig({
  testDir: '{{#test_dir}}{{.}}{{/test_dir}}{{^test_dir}}./tests{{/test_dir}}',
  fullyParallel: {{#fully_parallel}}{{.}}{{/fully_parallel}}{{^fully_parallel}}true{{/fully_parallel}},
  forbidOnly: !!process.env.CI,
  retries: process.env.CI ? {{#ci_retries}}{{.}}{{/ci_retries}}{{^ci_retries}}2{{/ci_retries}} : {{#local_retries}}{{.}}{{/local_retries}}{{^local_retries}}0{{/local_retries}},
  workers: process.env.CI ? {{#ci_workers}}{{.}}{{/ci_workers}}{{^ci_workers}}1{{/ci_workers}} : {{#local_workers}}{{.}}{{/local_workers}}{{^local_workers}}undefined{{/local_workers}},
  reporter: [
    ['html', { open: 'never' }],
    {{#ci}}['github'],{{/ci}}
    ['list']
  ],
  
  use: {
    baseURL: '{{#base_url}}{{.}}{{/base_url}}{{^base_url}}http://localhost:{{#port}}{{.}}{{/port}}{{^port}}3000{{/port}}{{/base_url}}',
    trace: '{{#trace}}{{.}}{{/trace}}{{^trace}}on-first-retry{{/trace}}',
    screenshot: '{{#screenshot}}{{.}}{{/screenshot}}{{^screenshot}}only-on-failure{{/screenshot}}',
    video: '{{#video}}{{.}}{{/video}}{{^video}}on-first-retry{{/video}}',
    
    {{#viewport}}
    viewport: { width: {{width}}, height: {{height}} },
    {{/viewport}}
    
    {{#actionability}}
    actionTimeout: {{#timeout}}{{.}}{{/timeout}}{{^timeout}}5000{{/timeout}},
    {{/actionability}}
    
    {{#navigation}}
    navigationTimeout: {{#timeout}}{{.}}{{/timeout}}{{^timeout}}30000{{/timeout}},
    {{/navigation}}
    
    {{#testIdAttribute}}
    testIdAttribute: '{{.}}',
    {{/testIdAttribute}}
    
    {{#permissions}}
    permissions: [{{#permission_list}}'{{.}}', {{/permission_list}}],
    {{/permissions}}
    
    {{#geolocation}}
    geolocation: { latitude: {{latitude}}, longitude: {{longitude}} },
    {{/geolocation}}
    
    {{#locale}}
    locale: '{{.}}',
    {{/locale}}
    
    {{#timezone}}
    timezone: '{{.}}',
    {{/timezone}}
    
    {{#colorScheme}}
    colorScheme: '{{.}}',
    {{/colorScheme}}
    
    {{#storageState}}
    storageState: '{{.}}',
    {{/storageState}}
    
    {{#extraHTTPHeaders}}
    extraHTTPHeaders: {
      {{#headers}}
      '{{name}}': '{{value}}',
      {{/headers}}
    },
    {{/extraHTTPHeaders}}
  },
  
  projects: [
    {
      name: 'chromium',
      use: { ...devices['Desktop Chrome'] },
    },
    {{#firefox}}
    {
      name: 'firefox',
      use: { ...devices['Desktop Firefox'] },
    },
    {{/firefox}}
    {{#webkit}}
    {
      name: 'webkit',
      use: { ...devices['Desktop Safari'] },
    },
    {{/webkit}}
    {{#mobile}}
    {
      name: 'Mobile Chrome',
      use: { ...devices['Pixel 5'] },
    },
    {
      name: 'Mobile Safari',
      use: { ...devices['iPhone 12'] },
    },
    {{/mobile}}
    {{#tablet}}
    {
      name: 'Tablet Chrome',
      use: { ...devices['Galaxy Tab S4'] },
    },
    {
      name: 'iPad',
      use: { ...devices['iPad (gen 7)'] },
    },
    {{/tablet}}
  ],
  
  {{#webServer}}
  webServer: {
    command: '{{command}}',
    url: '{{url}}',
    reuseExistingServer: !process.env.CI,
    {{#cwd}}
    cwd: '{{.}}',
    {{/cwd}}
    {{#timeout}}
    timeout: {{.}},
    {{/timeout}}
    {{#env}}
    env: {
      {{#env_vars}}
      {{name}}: '{{value}}',
      {{/env_vars}}
    },
    {{/env}}
  },
  {{/webServer}}
  
  {{#expect}}
  expect: {
    {{#timeout}}
    timeout: {{.}},
    {{/timeout}}
    {{#toHaveScreenshot}}
    toHaveScreenshot: {
      maxDiffPixelRatio: {{#max_diff_pixel_ratio}}{{.}}{{/max_diff_pixel_ratio}}{{^max_diff_pixel_ratio}}0.05{{/max_diff_pixel_ratio}},
      threshold: {{#threshold}}{{.}}{{/threshold}}{{^threshold}}0.2{{/threshold}},
    },
    {{/toHaveScreenshot}}
    {{#toMatchSnapshot}}
    toMatchSnapshot: {
      threshold: {{#threshold}}{{.}}{{/threshold}}{{^threshold}}0.2{{/threshold}},
    },
    {{/toMatchSnapshot}}
  },
  {{/expect}}
  
  {{#outputDir}}
  outputDir: '{{.}}',
  {{/outputDir}}
  
  {{#globalSetup}}
  globalSetup: '{{.}}',
  {{/globalSetup}}
  
  {{#globalTeardown}}
  globalTeardown: '{{.}}',
  {{/globalTeardown}}
  
  {{#ignoreSnapshots}}
  ignoreSnapshots: {{.}},
  {{/ignoreSnapshots}}
  
  {{#preserveOutput}}
  preserveOutput: '{{.}}',
  {{/preserveOutput}}
  
  {{#timeout}}
  timeout: {{.}},
  {{/timeout}}
  
  {{#updateSnapshots}}
  updateSnapshots: '{{.}}',
  {{/updateSnapshots}}
  
  {{#maxFailures}}
  maxFailures: {{.}},
  {{/maxFailures}}
  
  {{#quiet}}
  quiet: {{.}},
  {{/quiet}}
  
  {{#shard}}
  shard: {
    current: {{current}},
    total: {{total}},
  },
  {{/shard}}
});
{{/typescript}}

{{^typescript}}
const { defineConfig, devices } = require('@playwright/test');

/**
 * Playwright configuration for end-to-end testing
 * Generated by Rumble
 */
module.exports = defineConfig({
  testDir: '{{#test_dir}}{{.}}{{/test_dir}}{{^test_dir}}./tests{{/test_dir}}',
  fullyParallel: {{#fully_parallel}}{{.}}{{/fully_parallel}}{{^fully_parallel}}true{{/fully_parallel}},
  forbidOnly: !!process.env.CI,
  retries: process.env.CI ? {{#ci_retries}}{{.}}{{/ci_retries}}{{^ci_retries}}2{{/ci_retries}} : {{#local_retries}}{{.}}{{/local_retries}}{{^local_retries}}0{{/local_retries}},
  workers: process.env.CI ? {{#ci_workers}}{{.}}{{/ci_workers}}{{^ci_workers}}1{{/ci_workers}} : {{#local_workers}}{{.}}{{/local_workers}}{{^local_workers}}undefined{{/local_workers}},
  reporter: [
    ['html', { open: 'never' }],
    {{#ci}}['github'],{{/ci}}
    ['list']
  ],
  
  use: {
    baseURL: '{{#base_url}}{{.}}{{/base_url}}{{^base_url}}http://localhost:{{#port}}{{.}}{{/port}}{{^port}}3000{{/port}}{{/base_url}}',
    trace: '{{#trace}}{{.}}{{/trace}}{{^trace}}on-first-retry{{/trace}}',
    screenshot: '{{#screenshot}}{{.}}{{/screenshot}}{{^screenshot}}only-on-failure{{/screenshot}}',
    video: '{{#video}}{{.}}{{/video}}{{^video}}on-first-retry{{/video}}',
    
    {{#viewport}}
    viewport: { width: {{width}}, height: {{height}} },
    {{/viewport}}
    
    {{#actionability}}
    actionTimeout: {{#timeout}}{{.}}{{/timeout}}{{^timeout}}5000{{/timeout}},
    {{/actionability}}
    
    {{#navigation}}
    navigationTimeout: {{#timeout}}{{.}}{{/timeout}}{{^timeout}}30000{{/timeout}},
    {{/navigation}}
    
    {{#testIdAttribute}}
    testIdAttribute: '{{.}}',
    {{/testIdAttribute}}
    
    {{#permissions}}
    permissions: [{{#permission_list}}'{{.}}', {{/permission_list}}],
    {{/permissions}}
    
    {{#geolocation}}
    geolocation: { latitude: {{latitude}}, longitude: {{longitude}} },
    {{/geolocation}}
    
    {{#locale}}
    locale: '{{.}}',
    {{/locale}}
    
    {{#timezone}}
    timezone: '{{.}}',
    {{/timezone}}
    
    {{#colorScheme}}
    colorScheme: '{{.}}',
    {{/colorScheme}}
    
    {{#storageState}}
    storageState: '{{.}}',
    {{/storageState}}
    
    {{#extraHTTPHeaders}}
    extraHTTPHeaders: {
      {{#headers}}
      '{{name}}': '{{value}}',
      {{/headers}}
    },
    {{/extraHTTPHeaders}}
  },
  
  projects: [
    {
      name: 'chromium',
      use: { ...devices['Desktop Chrome'] },
    },
    {{#firefox}}
    {
      name: 'firefox',
      use: { ...devices['Desktop Firefox'] },
    },
    {{/firefox}}
    {{#webkit}}
    {
      name: 'webkit',
      use: { ...devices['Desktop Safari'] },
    },
    {{/webkit}}
    {{#mobile}}
    {
      name: 'Mobile Chrome',
      use: { ...devices['Pixel 5'] },
    },
    {
      name: 'Mobile Safari',
      use: { ...devices['iPhone 12'] },
    },
    {{/mobile}}
    {{#tablet}}
    {
      name: 'Tablet Chrome',
      use: { ...devices['Galaxy Tab S4'] },
    },
    {
      name: 'iPad',
      use: { ...devices['iPad (gen 7)'] },
    },
    {{/tablet}}
  ],
  
  {{#webServer}}
  webServer: {
    command: '{{command}}',
    url: '{{url}}',
    reuseExistingServer: !process.env.CI,
    {{#cwd}}
    cwd: '{{.}}',
    {{/cwd}}
    {{#timeout}}
    timeout: {{.}},
    {{/timeout}}
    {{#env}}
    env: {
      {{#env_vars}}
      {{name}}: '{{value}}',
      {{/env_vars}}
    },
    {{/env}}
  },
  {{/webServer}}
  
  {{#expect}}
  expect: {
    {{#timeout}}
    timeout: {{.}},
    {{/timeout}}
    {{#toHaveScreenshot}}
    toHaveScreenshot: {
      maxDiffPixelRatio: {{#max_diff_pixel_ratio}}{{.}}{{/max_diff_pixel_ratio}}{{^max_diff_pixel_ratio}}0.05{{/max_diff_pixel_ratio}},
      threshold: {{#threshold}}{{.}}{{/threshold}}{{^threshold}}0.2{{/threshold}},
    },
    {{/toHaveScreenshot}}
    {{#toMatchSnapshot}}
    toMatchSnapshot: {
      threshold: {{#threshold}}{{.}}{{/threshold}}{{^threshold}}0.2{{/threshold}},
    },
    {{/toMatchSnapshot}}
  },
  {{/expect}}
  
  {{#outputDir}}
  outputDir: '{{.}}',
  {{/outputDir}}
  
  {{#globalSetup}}
  globalSetup: '{{.}}',
  {{/globalSetup}}
  
  {{#globalTeardown}}
  globalTeardown: '{{.}}',
  {{/globalTeardown}}
  
  {{#ignoreSnapshots}}
  ignoreSnapshots: {{.}},
  {{/ignoreSnapshots}}
  
  {{#preserveOutput}}
  preserveOutput: '{{.}}',
  {{/preserveOutput}}
  
  {{#timeout}}
  timeout: {{.}},
  {{/timeout}}
  
  {{#updateSnapshots}}
  updateSnapshots: '{{.}}',
  {{/updateSnapshots}}
  
  {{#maxFailures}}
  maxFailures: {{.}},
  {{/maxFailures}}
  
  {{#quiet}}
  quiet: {{.}},
  {{/quiet}}
  
  {{#shard}}
  shard: {
    current: {{current}},
    total: {{total}},
  },
  {{/shard}}
});
{{/typescript}}
