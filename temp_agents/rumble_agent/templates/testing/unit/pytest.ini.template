[pytest]
# Generated by Rumble

# Python paths and modules
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test discovery
testpaths = tests
norecursedirs = .git node_modules venv env .venv .env {{#additional_exclude_dirs}}{{.}} {{/additional_exclude_dirs}}

# Output and reporting
console_output_style = progress
log_cli = {{#log_cli}}True{{/log_cli}}{{^log_cli}}False{{/log_cli}}
log_cli_level = {{#log_cli_level}}{{.}}{{/log_cli_level}}{{^log_cli_level}}INFO{{/log_cli_level}}
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test execution
xvs = True  # Show extra test summary info as specified by chars: (f)ailed, (E)rror, (s)kipped, (x)failed, (X)passed
verbose = {{#verbose}}True{{/verbose}}{{^verbose}}False{{/verbose}}

# Timeouts
timeout = {{#timeout}}{{.}}{{/timeout}}{{^timeout}}300{{/timeout}}

# Fixtures
usefixtures = {{#global_fixtures}}{{.}} {{/global_fixtures}}

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    e2e: marks tests as end-to-end tests
    unit: marks tests as unit tests
    api: marks tests as API tests
    {{#custom_markers}}
    {{name}}: {{description}}
    {{/custom_markers}}

# Coverage settings
{{#enable_coverage}}
addopts = --cov={{package_name}} --cov-report=term --cov-report=html --cov-report=xml
{{/enable_coverage}}

# Environment variables
env =
    {{#env_vars}}
    {{name}}={{value}}
    {{/env_vars}}

# Database settings
{{#database_settings}}
mocked-databases=True
{{/database_settings}}

# Django settings
{{#django}}
DJANGO_SETTINGS_MODULE={{django_settings_module}}
{{/django}}

# Flask settings
{{#flask}}
FLASK_APP={{flask_app}}
FLASK_ENV=testing
{{/flask}}

# FastAPI settings
{{#fastapi}}
FASTAPI_APP={{fastapi_app}}
{{/fastapi}}
