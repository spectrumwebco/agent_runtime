# Docker Compose configuration for {{project_name}}
# Generated by Rumble

version: '{{#compose_version}}{{.}}{{/compose_version}}{{^compose_version}}3.8{{/compose_version}}'

services:
  {{#app}}
  # Main application service
  app:
    build:
      context: {{#context}}{{.}}{{/context}}{{^context}}.{{/context}}
      dockerfile: {{#dockerfile}}{{.}}{{/dockerfile}}{{^dockerfile}}Dockerfile{{/dockerfile}}
      {{#build_args}}
      args:
        {{#arg_pairs}}
        {{key}}: {{value}}
        {{/arg_pairs}}
      {{/build_args}}
    image: {{#image}}{{.}}{{/image}}{{^image}}{{project_name}}/app{{/image}}
    container_name: {{#container_name}}{{.}}{{/container_name}}{{^container_name}}{{project_name}}-app{{/container_name}}
    restart: {{#restart}}{{.}}{{/restart}}{{^restart}}unless-stopped{{/restart}}
    {{#ports}}
    ports:
      {{#port_mappings}}
      - "{{host}}:{{container}}"
      {{/port_mappings}}
    {{/ports}}
    {{#volumes}}
    volumes:
      {{#volume_mappings}}
      - {{host}}:{{container}}{{#read_only}}:ro{{/read_only}}
      {{/volume_mappings}}
    {{/volumes}}
    {{#environment}}
    environment:
      {{#env_vars}}
      {{key}}: {{value}}
      {{/env_vars}}
    {{/environment}}
    {{#env_file}}
    env_file:
      - {{.}}
    {{/env_file}}
    {{#depends_on}}
    depends_on:
      {{#services}}
      - {{.}}
      {{/services}}
    {{/depends_on}}
    {{#networks}}
    networks:
      {{#network_list}}
      - {{.}}
      {{/network_list}}
    {{/networks}}
    {{#healthcheck}}
    healthcheck:
      test: {{test}}
      interval: {{#interval}}{{.}}{{/interval}}{{^interval}}30s{{/interval}}
      timeout: {{#timeout}}{{.}}{{/timeout}}{{^timeout}}10s{{/timeout}}
      retries: {{#retries}}{{.}}{{/retries}}{{^retries}}3{{/retries}}
      start_period: {{#start_period}}{{.}}{{/start_period}}{{^start_period}}10s{{/start_period}}
    {{/healthcheck}}
    {{#deploy}}
    deploy:
      {{#replicas}}
      replicas: {{.}}
      {{/replicas}}
      {{#resources}}
      resources:
        limits:
          cpus: '{{#cpu_limit}}{{.}}{{/cpu_limit}}{{^cpu_limit}}0.5{{/cpu_limit}}'
          memory: {{#memory_limit}}{{.}}{{/memory_limit}}{{^memory_limit}}512M{{/memory_limit}}
        reservations:
          cpus: '{{#cpu_reservation}}{{.}}{{/cpu_reservation}}{{^cpu_reservation}}0.1{{/cpu_reservation}}'
          memory: {{#memory_reservation}}{{.}}{{/memory_reservation}}{{^memory_reservation}}128M{{/memory_reservation}}
      {{/resources}}
      {{#restart_policy}}
      restart_policy:
        condition: {{#condition}}{{.}}{{/condition}}{{^condition}}on-failure{{/condition}}
        delay: {{#delay}}{{.}}{{/delay}}{{^delay}}5s{{/delay}}
        max_attempts: {{#max_attempts}}{{.}}{{/max_attempts}}{{^max_attempts}}3{{/max_attempts}}
        window: {{#window}}{{.}}{{/window}}{{^window}}120s{{/window}}
      {{/restart_policy}}
    {{/deploy}}
    {{#command}}
    command: {{.}}
    {{/command}}
  {{/app}}

  {{#web}}
  # Web server service
  web:
    image: {{#web_image}}{{.}}{{/web_image}}{{^web_image}}nginx:alpine{{/web_image}}
    container_name: {{#web_container_name}}{{.}}{{/web_container_name}}{{^web_container_name}}{{project_name}}-web{{/web_container_name}}
    restart: {{#web_restart}}{{.}}{{/web_restart}}{{^web_restart}}unless-stopped{{/web_restart}}
    ports:
      - "{{#web_port}}{{.}}{{/web_port}}{{^web_port}}80{{/web_port}}:80"
      {{#ssl}}
      - "{{#ssl_port}}{{.}}{{/ssl_port}}{{^ssl_port}}443{{/ssl_port}}:443"
      {{/ssl}}
    volumes:
      - {{#nginx_conf}}{{.}}{{/nginx_conf}}{{^nginx_conf}}./nginx/default.conf:/etc/nginx/conf.d/default.conf{{/nginx_conf}}
      {{#static_files}}
      - {{static_dir}}:/usr/share/nginx/html
      {{/static_files}}
      {{#ssl}}
      - {{ssl_cert}}:/etc/nginx/ssl/cert.pem
      - {{ssl_key}}:/etc/nginx/ssl/key.pem
      {{/ssl}}
    {{#web_depends_on}}
    depends_on:
      {{#web_services}}
      - {{.}}
      {{/web_services}}
    {{/web_depends_on}}
    {{#web_networks}}
    networks:
      {{#web_network_list}}
      - {{.}}
      {{/web_network_list}}
    {{/web_networks}}
  {{/web}}

  {{#database}}
  # Database service
  db:
    {{#postgres}}
    image: postgres:{{#postgres_version}}{{.}}{{/postgres_version}}{{^postgres_version}}15-alpine{{/postgres_version}}
    container_name: {{#db_container_name}}{{.}}{{/db_container_name}}{{^db_container_name}}{{project_name}}-postgres{{/db_container_name}}
    restart: {{#db_restart}}{{.}}{{/db_restart}}{{^db_restart}}unless-stopped{{/db_restart}}
    environment:
      POSTGRES_DB: {{#postgres_db}}{{.}}{{/postgres_db}}{{^postgres_db}}{{project_name}}{{/postgres_db}}
      POSTGRES_USER: {{#postgres_user}}{{.}}{{/postgres_user}}{{^postgres_user}}postgres{{/postgres_user}}
      POSTGRES_PASSWORD: {{#postgres_password}}{{.}}{{/postgres_password}}{{^postgres_password}}postgres{{/postgres_password}}
      {{#postgres_env_vars}}
      {{key}}: {{value}}
      {{/postgres_env_vars}}
    {{/postgres}}
    {{#mysql}}
    image: mysql:{{#mysql_version}}{{.}}{{/mysql_version}}{{^mysql_version}}8.0{{/mysql_version}}
    container_name: {{#db_container_name}}{{.}}{{/db_container_name}}{{^db_container_name}}{{project_name}}-mysql{{/db_container_name}}
    restart: {{#db_restart}}{{.}}{{/db_restart}}{{^db_restart}}unless-stopped{{/db_restart}}
    environment:
      MYSQL_DATABASE: {{#mysql_db}}{{.}}{{/mysql_db}}{{^mysql_db}}{{project_name}}{{/mysql_db}}
      MYSQL_USER: {{#mysql_user}}{{.}}{{/mysql_user}}{{^mysql_user}}mysql{{/mysql_user}}
      MYSQL_PASSWORD: {{#mysql_password}}{{.}}{{/mysql_password}}{{^mysql_password}}mysql{{/mysql_password}}
      MYSQL_ROOT_PASSWORD: {{#mysql_root_password}}{{.}}{{/mysql_root_password}}{{^mysql_root_password}}root{{/mysql_root_password}}
      {{#mysql_env_vars}}
      {{key}}: {{value}}
      {{/mysql_env_vars}}
    {{/mysql}}
    {{#mongodb}}
    image: mongo:{{#mongodb_version}}{{.}}{{/mongodb_version}}{{^mongodb_version}}6.0{{/mongodb_version}}
    container_name: {{#db_container_name}}{{.}}{{/db_container_name}}{{^db_container_name}}{{project_name}}-mongodb{{/db_container_name}}
    restart: {{#db_restart}}{{.}}{{/db_restart}}{{^db_restart}}unless-stopped{{/db_restart}}
    environment:
      MONGO_INITDB_DATABASE: {{#mongodb_db}}{{.}}{{/mongodb_db}}{{^mongodb_db}}{{project_name}}{{/mongodb_db}}
      MONGO_INITDB_ROOT_USERNAME: {{#mongodb_user}}{{.}}{{/mongodb_user}}{{^mongodb_user}}mongo{{/mongodb_user}}
      MONGO_INITDB_ROOT_PASSWORD: {{#mongodb_password}}{{.}}{{/mongodb_password}}{{^mongodb_password}}mongo{{/mongodb_password}}
      {{#mongodb_env_vars}}
      {{key}}: {{value}}
      {{/mongodb_env_vars}}
    {{/mongodb}}
    ports:
      {{#postgres}}
      - "{{#db_port}}{{.}}{{/db_port}}{{^db_port}}5432{{/db_port}}:5432"
      {{/postgres}}
      {{#mysql}}
      - "{{#db_port}}{{.}}{{/db_port}}{{^db_port}}3306{{/db_port}}:3306"
      {{/mysql}}
      {{#mongodb}}
      - "{{#db_port}}{{.}}{{/db_port}}{{^db_port}}27017{{/db_port}}:27017"
      {{/mongodb}}
    volumes:
      - {{#db_volume}}{{.}}{{/db_volume}}{{^db_volume}}db-data:/var/lib/{{#postgres}}postgresql/data{{/postgres}}{{#mysql}}mysql{{/mysql}}{{#mongodb}}mongodb/data/db{{/mongodb}}{{/db_volume}}
      {{#db_init_scripts}}
      - {{.}}:/docker-entrypoint-initdb.d/
      {{/db_init_scripts}}
    {{#db_networks}}
    networks:
      {{#db_network_list}}
      - {{.}}
      {{/db_network_list}}
    {{/db_networks}}
  {{/database}}

  {{#redis}}
  # Redis service
  redis:
    image: redis:{{#redis_version}}{{.}}{{/redis_version}}{{^redis_version}}alpine{{/redis_version}}
    container_name: {{#redis_container_name}}{{.}}{{/redis_container_name}}{{^redis_container_name}}{{project_name}}-redis{{/redis_container_name}}
    restart: {{#redis_restart}}{{.}}{{/redis_restart}}{{^redis_restart}}unless-stopped{{/redis_restart}}
    {{#redis_command}}
    command: {{.}}
    {{/redis_command}}
    {{#redis_ports}}
    ports:
      - "{{#redis_port}}{{.}}{{/redis_port}}{{^redis_port}}6379{{/redis_port}}:6379"
    {{/redis_ports}}
    {{#redis_volumes}}
    volumes:
      - {{#redis_data}}{{.}}{{/redis_data}}{{^redis_data}}redis-data:/data{{/redis_data}}
      {{#redis_conf}}
      - {{.}}:/usr/local/etc/redis/redis.conf
      {{/redis_conf}}
    {{/redis_volumes}}
    {{#redis_networks}}
    networks:
      {{#redis_network_list}}
      - {{.}}
      {{/redis_network_list}}
    {{/redis_networks}}
  {{/redis}}

  {{#elasticsearch}}
  # Elasticsearch service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:{{#es_version}}{{.}}{{/es_version}}{{^es_version}}8.6.0{{/es_version}}
    container_name: {{#es_container_name}}{{.}}{{/es_container_name}}{{^es_container_name}}{{project_name}}-elasticsearch{{/es_container_name}}
    restart: {{#es_restart}}{{.}}{{/es_restart}}{{^es_restart}}unless-stopped{{/es_restart}}
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms{{#es_heap_size}}{{.}}{{/es_heap_size}}{{^es_heap_size}}512m{{/es_heap_size}} -Xmx{{#es_heap_size}}{{.}}{{/es_heap_size}}{{^es_heap_size}}512m{{/es_heap_size}}"
      - xpack.security.enabled={{#es_security}}{{.}}{{/es_security}}{{^es_security}}false{{/es_security}}
      {{#es_env_vars}}
      - {{key}}={{value}}
      {{/es_env_vars}}
    ports:
      - "{{#es_port}}{{.}}{{/es_port}}{{^es_port}}9200{{/es_port}}:9200"
    volumes:
      - {{#es_data}}{{.}}{{/es_data}}{{^es_data}}elasticsearch-data:/usr/share/elasticsearch/data{{/es_data}}
    {{#es_networks}}
    networks:
      {{#es_network_list}}
      - {{.}}
      {{/es_network_list}}
    {{/es_networks}}
  {{/elasticsearch}}

  {{#rabbitmq}}
  # RabbitMQ service
  rabbitmq:
    image: rabbitmq:{{#rabbitmq_version}}{{.}}{{/rabbitmq_version}}{{^rabbitmq_version}}3-management{{/rabbitmq_version}}
    container_name: {{#rabbitmq_container_name}}{{.}}{{/rabbitmq_container_name}}{{^rabbitmq_container_name}}{{project_name}}-rabbitmq{{/rabbitmq_container_name}}
    restart: {{#rabbitmq_restart}}{{.}}{{/rabbitmq_restart}}{{^rabbitmq_restart}}unless-stopped{{/rabbitmq_restart}}
    ports:
      - "{{#rabbitmq_port}}{{.}}{{/rabbitmq_port}}{{^rabbitmq_port}}5672{{/rabbitmq_port}}:5672"
      - "{{#rabbitmq_management_port}}{{.}}{{/rabbitmq_management_port}}{{^rabbitmq_management_port}}15672{{/rabbitmq_management_port}}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: {{#rabbitmq_user}}{{.}}{{/rabbitmq_user}}{{^rabbitmq_user}}guest{{/rabbitmq_user}}
      RABBITMQ_DEFAULT_PASS: {{#rabbitmq_password}}{{.}}{{/rabbitmq_password}}{{^rabbitmq_password}}guest{{/rabbitmq_password}}
      {{#rabbitmq_env_vars}}
      {{key}}: {{value}}
      {{/rabbitmq_env_vars}}
    volumes:
      - {{#rabbitmq_data}}{{.}}{{/rabbitmq_data}}{{^rabbitmq_data}}rabbitmq-data:/var/lib/rabbitmq{{/rabbitmq_data}}
    {{#rabbitmq_networks}}
    networks:
      {{#rabbitmq_network_list}}
      - {{.}}
      {{/rabbitmq_network_list}}
    {{/rabbitmq_networks}}
  {{/rabbitmq}}

  {{#monitoring}}
  # Prometheus service
  prometheus:
    image: prom/prometheus:{{#prometheus_version}}{{.}}{{/prometheus_version}}{{^prometheus_version}}latest{{/prometheus_version}}
    container_name: {{#prometheus_container_name}}{{.}}{{/prometheus_container_name}}{{^prometheus_container_name}}{{project_name}}-prometheus{{/prometheus_container_name}}
    restart: {{#prometheus_restart}}{{.}}{{/prometheus_restart}}{{^prometheus_restart}}unless-stopped{{/prometheus_restart}}
    ports:
      - "{{#prometheus_port}}{{.}}{{/prometheus_port}}{{^prometheus_port}}9090{{/prometheus_port}}:9090"
    volumes:
      - {{#prometheus_config}}{{.}}{{/prometheus_config}}{{^prometheus_config}}./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml{{/prometheus_config}}
      - {{#prometheus_data}}{{.}}{{/prometheus_data}}{{^prometheus_data}}prometheus-data:/prometheus{{/prometheus_data}}
    {{#prometheus_networks}}
    networks:
      {{#prometheus_network_list}}
      - {{.}}
      {{/prometheus_network_list}}
    {{/prometheus_networks}}

  # Grafana service
  grafana:
    image: grafana/grafana:{{#grafana_version}}{{.}}{{/grafana_version}}{{^grafana_version}}latest{{/grafana_version}}
    container_name: {{#grafana_container_name}}{{.}}{{/grafana_container_name}}{{^grafana_container_name}}{{project_name}}-grafana{{/grafana_container_name}}
    restart: {{#grafana_restart}}{{.}}{{/grafana_restart}}{{^grafana_restart}}unless-stopped{{/grafana_restart}}
    ports:
      - "{{#grafana_port}}{{.}}{{/grafana_port}}{{^grafana_port}}3000{{/grafana_port}}:3000"
    environment:
      GF_SECURITY_ADMIN_USER: {{#grafana_user}}{{.}}{{/grafana_user}}{{^grafana_user}}admin{{/grafana_user}}
      GF_SECURITY_ADMIN_PASSWORD: {{#grafana_password}}{{.}}{{/grafana_password}}{{^grafana_password}}admin{{/grafana_password}}
      {{#grafana_env_vars}}
      {{key}}: {{value}}
      {{/grafana_env_vars}}
    volumes:
      - {{#grafana_data}}{{.}}{{/grafana_data}}{{^grafana_data}}grafana-data:/var/lib/grafana{{/grafana_data}}
      {{#grafana_provisioning}}
      - {{.}}:/etc/grafana/provisioning
      {{/grafana_provisioning}}
    {{#grafana_networks}}
    networks:
      {{#grafana_network_list}}
      - {{.}}
      {{/grafana_network_list}}
    {{/grafana_networks}}
  {{/monitoring}}

{{#volumes}}
volumes:
  {{#volume_list}}
  {{name}}:
    {{#external}}
    external: true
    {{/external}}
    {{#driver}}
    driver: {{.}}
    {{/driver}}
    {{#driver_opts}}
    driver_opts:
      {{#opts}}
      {{key}}: {{value}}
      {{/opts}}
    {{/driver_opts}}
  {{/volume_list}}
{{/volumes}}
{{^volumes}}
{{#database}}
volumes:
  {{#postgres}}
  db-data:
  {{/postgres}}
  {{#mysql}}
  db-data:
  {{/mysql}}
  {{#mongodb}}
  db-data:
  {{/mongodb}}
  {{#redis}}
  redis-data:
  {{/redis}}
  {{#elasticsearch}}
  elasticsearch-data:
  {{/elasticsearch}}
  {{#monitoring}}
  prometheus-data:
  grafana-data:
  {{/monitoring}}
{{/database}}
{{/volumes}}

{{#networks}}
networks:
  {{#network_list}}
  {{name}}:
    {{#external}}
    external: true
    {{/external}}
    {{#driver}}
    driver: {{.}}
    {{/driver}}
    {{#driver_opts}}
    driver_opts:
      {{#opts}}
      {{key}}: {{value}}
      {{/opts}}
    {{/driver_opts}}
  {{/network_list}}
{{/networks}}
{{^networks}}
{{#multiple_services}}
networks:
  default:
    driver: bridge
{{/multiple_services}}
{{/networks}}
