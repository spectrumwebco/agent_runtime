# fly.toml configuration for {{project_name}}
# Generated by Rumble

app = "{{#app_name}}{{.}}{{/app_name}}{{^app_name}}{{project_name}}{{/app_name}}"
primary_region = "{{#primary_region}}{{.}}{{/primary_region}}{{^primary_region}}iad{{/primary_region}}"
kill_signal = "{{#kill_signal}}{{.}}{{/kill_signal}}{{^kill_signal}}SIGINT{{/kill_signal}}"
kill_timeout = "{{#kill_timeout}}{{.}}{{/kill_timeout}}{{^kill_timeout}}5s{{/kill_timeout}}"

[experimental]
  {{#auto_rollback}}
  auto_rollback = {{.}}
  {{/auto_rollback}}
  {{^auto_rollback}}
  auto_rollback = true
  {{/auto_rollback}}

[build]
  {{#builder}}
  builder = "{{.}}"
  {{/builder}}
  {{^builder}}
  {{#dockerfile}}
  dockerfile = "{{.}}"
  {{/dockerfile}}
  {{^dockerfile}}
  dockerfile = "Dockerfile"
  {{/dockerfile}}
  {{/builder}}
  
  {{#buildpacks}}
  [build.buildpacks]
    {{#buildpack_list}}
    [[build.buildpacks.buildpacks]]
      id = "{{id}}"
      {{#version}}
      version = "{{.}}"
      {{/version}}
    {{/buildpack_list}}
  {{/buildpacks}}

[env]
  {{#env_vars}}
  {{key}} = "{{value}}"
  {{/env_vars}}
  {{^env_vars}}
  PORT = "8080"
  {{#node}}
  NODE_ENV = "production"
  {{/node}}
  {{/env_vars}}

{{#http_service}}
[http_service]
  internal_port = {{#internal_port}}{{.}}{{/internal_port}}{{^internal_port}}8080{{/internal_port}}
  force_https = {{#force_https}}{{.}}{{/force_https}}{{^force_https}}true{{/force_https}}
  auto_stop_machines = {{#auto_stop_machines}}{{.}}{{/auto_stop_machines}}{{^auto_stop_machines}}true{{/auto_stop_machines}}
  auto_start_machines = {{#auto_start_machines}}{{.}}{{/auto_start_machines}}{{^auto_start_machines}}true{{/auto_start_machines}}
  min_machines_running = {{#min_machines_running}}{{.}}{{/min_machines_running}}{{^min_machines_running}}0{{/min_machines_running}}
  processes = {{#processes}}{{.}}{{/processes}}{{^processes}}["app"]{{/processes}}

  {{#concurrency}}
  [http_service.concurrency]
    type = "{{#type}}{{.}}{{/type}}{{^type}}connections{{/type}}"
    hard_limit = {{#hard_limit}}{{.}}{{/hard_limit}}{{^hard_limit}}25{{/hard_limit}}
    soft_limit = {{#soft_limit}}{{.}}{{/soft_limit}}{{^soft_limit}}20{{/soft_limit}}
  {{/concurrency}}

  {{#http_checks}}
  [[http_service.checks]]
    grace_period = "{{#grace_period}}{{.}}{{/grace_period}}{{^grace_period}}5s{{/grace_period}}"
    interval = "{{#interval}}{{.}}{{/interval}}{{^interval}}10s{{/interval}}"
    method = "{{#method}}{{.}}{{/method}}{{^method}}get{{/method}}"
    timeout = "{{#timeout}}{{.}}{{/timeout}}{{^timeout}}2s{{/timeout}}"
    path = "{{#path}}{{.}}{{/path}}{{^path}}/health{{/path}}"
    protocol = "{{#protocol}}{{.}}{{/protocol}}{{^protocol}}http{{/protocol}}"
  {{/http_checks}}
{{/http_service}}

{{#tcp_service}}
[[tcp_service]]
  internal_port = {{#internal_port}}{{.}}{{/internal_port}}{{^internal_port}}8080{{/internal_port}}
  protocol = "{{#protocol}}{{.}}{{/protocol}}{{^protocol}}tcp{{/protocol}}"
  auto_stop_machines = {{#auto_stop_machines}}{{.}}{{/auto_stop_machines}}{{^auto_stop_machines}}true{{/auto_stop_machines}}
  auto_start_machines = {{#auto_start_machines}}{{.}}{{/auto_start_machines}}{{^auto_start_machines}}true{{/auto_start_machines}}
  min_machines_running = {{#min_machines_running}}{{.}}{{/min_machines_running}}{{^min_machines_running}}0{{/min_machines_running}}
  processes = {{#processes}}{{.}}{{/processes}}{{^processes}}["app"]{{/processes}}
  
  {{#tcp_checks}}
  [[tcp_service.checks]]
    interval = "{{#interval}}{{.}}{{/interval}}{{^interval}}10s{{/interval}}"
    timeout = "{{#timeout}}{{.}}{{/timeout}}{{^timeout}}2s{{/timeout}}"
    grace_period = "{{#grace_period}}{{.}}{{/grace_period}}{{^grace_period}}5s{{/grace_period}}"
  {{/tcp_checks}}
{{/tcp_service}}

{{#processes}}
[processes]
  {{#process_list}}
  {{name}} = "{{command}}"
  {{/process_list}}
{{/processes}}

{{#services}}
[[services]]
  protocol = "{{#protocol}}{{.}}{{/protocol}}{{^protocol}}tcp{{/protocol}}"
  internal_port = {{#internal_port}}{{.}}{{/internal_port}}{{^internal_port}}8080{{/internal_port}}
  {{#ports}}
  [[services.ports]]
    port = {{port}}
    {{#handlers}}
    handlers = {{.}}
    {{/handlers}}
  {{/ports}}
  {{#concurrency}}
  [services.concurrency]
    type = "{{#type}}{{.}}{{/type}}{{^type}}connections{{/type}}"
    hard_limit = {{#hard_limit}}{{.}}{{/hard_limit}}{{^hard_limit}}25{{/hard_limit}}
    soft_limit = {{#soft_limit}}{{.}}{{/soft_limit}}{{^soft_limit}}20{{/soft_limit}}
  {{/concurrency}}
  {{#http_checks}}
  [[services.http_checks]]
    interval = {{#interval}}{{.}}{{/interval}}{{^interval}}10000{{/interval}}
    grace_period = {{#grace_period}}{{.}}{{/grace_period}}{{^grace_period}}5000{{/grace_period}}
    method = "{{#method}}{{.}}{{/method}}{{^method}}get{{/method}}"
    path = "{{#path}}{{.}}{{/path}}{{^path}}/health{{/path}}"
    protocol = "{{#protocol}}{{.}}{{/protocol}}{{^protocol}}http{{/protocol}}"
    timeout = {{#timeout}}{{.}}{{/timeout}}{{^timeout}}2000{{/timeout}}
  {{/http_checks}}
{{/services}}

{{#mounts}}
[[mounts]]
  source = "{{source}}"
  destination = "{{destination}}"
  {{#processes}}
  processes = {{.}}
  {{/processes}}
{{/mounts}}

{{#statics}}
[[statics]]
  guest_path = "{{guest_path}}"
  url_prefix = "{{url_prefix}}"
{{/statics}}

{{#metrics}}
[metrics]
  port = {{#port}}{{.}}{{/port}}{{^port}}9091{{/port}}
  path = "{{#path}}{{.}}{{/path}}{{^path}}/metrics{{/path}}"
{{/metrics}}

{{#deploy}}
[deploy]
  {{#release_command}}
  release_command = "{{.}}"
  {{/release_command}}
  {{#strategy}}
  strategy = "{{.}}"
  {{/strategy}}
{{/deploy}}

{{#vm}}
[vm]
  cpu_kind = "{{#cpu_kind}}{{.}}{{/cpu_kind}}{{^cpu_kind}}shared{{/cpu_kind}}"
  cpus = {{#cpus}}{{.}}{{/cpus}}{{^cpus}}1{{/cpus}}
  memory_mb = {{#memory_mb}}{{.}}{{/memory_mb}}{{^memory_mb}}256{{/memory_mb}}
  {{#gpu}}
  gpu_kind = "{{kind}}"
  {{/gpu}}
{{/vm}}
