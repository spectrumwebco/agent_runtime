apiVersion: v1
kind: Service
metadata:
  name: dragonfly-db
  namespace: default
  labels:
    app: dragonfly-db
    service: cache
spec:
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: dragonfly-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dragonfly-db
  namespace: default
  labels:
    app: dragonfly-db
    service: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dragonfly-db
  template:
    metadata:
      labels:
        app: dragonfly-db
        service: cache
    spec:
      containers:
      - name: dragonfly
        image: docker.dragonflydb.io/dragonflydb/dragonfly:latest
        args: ["--requirepass", "$(REDIS_PASSWORD)"]
        ports:
        - containerPort: 6379
          name: redis
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cache-credentials
              key: redis-password
        volumeMounts:
        - name: dragonfly-data
          mountPath: /data
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: dragonfly-data
        emptyDir: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: cache-credentials
  namespace: default
type: Opaque
stringData:
  redis-password: "${REDIS_PASSWORD}"
