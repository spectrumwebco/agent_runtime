apiVersion: batch/v1
kind: Job
metadata:
  name: rollback-hook
  namespace: ml-infrastructure
  annotations:
    argocd.argoproj.io/hook: SyncFail
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: argocd-rollback-sa
      containers:
      - name: kubectl
        image: bitnami/kubectl:latest
        command:
        - /bin/sh
        - -c
        - |
          PREV_REVISION=$(kubectl get deploy -n ml-infrastructure -l app.kubernetes.io/instance=ml-infrastructure -o jsonpath='{.items[0].metadata.annotations.deployment\.kubernetes\.io/revision-history}' | tr -d ' ' | sed 's/,/ /g' | awk '{print $1}')
          
          kubectl get deploy -n ml-infrastructure -l app.kubernetes.io/instance=ml-infrastructure -o name | xargs -I{} kubectl rollout undo {} --to-revision=$PREV_REVISION
          
          echo "Rolled back ml-infrastructure to revision $PREV_REVISION due to sync failure"
          
          argocd app patch ml-infrastructure --patch '{"status": {"operationState": {"message": "Automatic rollback to revision '$PREV_REVISION' completed"}}}' --type merge
      restartPolicy: Never
  backoffLimit: 2
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-rollback-sa
  namespace: ml-infrastructure
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argocd-rollback-role
  namespace: ml-infrastructure
rules:
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "patch", "update"]
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list"]
- apiGroups: ["argoproj.io"]
  resources: ["applications"]
  verbs: ["get", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argocd-rollback-rolebinding
  namespace: ml-infrastructure
subjects:
- kind: ServiceAccount
  name: argocd-rollback-sa
  namespace: ml-infrastructure
roleRef:
  kind: Role
  name: argocd-rollback-role
  apiGroup: rbac.authorization.k8s.io
