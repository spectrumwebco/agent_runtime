name: CI Pipeline

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

jobs:
  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
      - name: Format check with black
        run: |
          black --check src/ tests/

  validate-kubernetes:
    name: Validate Kubernetes Manifests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      - name: Validate Kubernetes manifests
        run: |
          find src/ml_infrastructure -name "*.yaml" -type f -exec kubectl apply --dry-run=client -f {} \;

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [lint, validate-kubernetes]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run unit tests
        run: |
          python -m unittest discover -s tests/unit
      - name: Run integration tests
        run: |
          python -m unittest discover -s tests/integration

  terraform-validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.4.6'
      - name: Terraform Init
        run: |
          cd terraform
          terraform init -backend=false
      - name: Terraform Validate
        run: |
          cd terraform
          terraform validate

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: [test, terraform-validate]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging')
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push API image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.api
          push: true
          tags: ghcr.io/${{ github.repository }}/ml-api:${{ github.sha }},ghcr.io/${{ github.repository }}/ml-api:latest
      - name: Build and push Training image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.training
          push: true
          tags: ghcr.io/${{ github.repository }}/ml-training:${{ github.sha }},ghcr.io/${{ github.repository }}/ml-training:latest
