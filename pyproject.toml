# pyproject.toml for Python dependencies within the Go agent_runtime project

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "agent_runtime_python_deps" # Placeholder name
version = "0.1.0" # Placeholder version
description = "Python dependencies for SWE-Agent components integrated into agent_runtime."
requires-python = ">=3.11"
license = { text = "MIT" } # Assuming MIT based on SWE-Agent, adjust if needed

# Core dependencies from SWE-Agent
dependencies = [
    "datasets",
    "numpy",
    "pandas",
    "rich",
    "ruamel.yaml",
    "tenacity",
    "unidiff",
    "simple-parsing",
    "rich-argparse",
    "flask",
    "flask-cors",
    "flask-socketio",
    "pydantic",
    "python-dotenv",
    "pydantic_settings",
    "litellm",
    "GitPython",
    "ghapi",
    "swe-rex>=1.2.0",
    "tabulate",
    "textual>=1.0.0",
]

[project.scripts]
sweagent = "sweagent.run.run:main"


[project.optional-dependencies]
# Development dependencies from SWE-Agent
dev = [
    "mike",
    "mkdocs-material",
    "mkdocs-glightbox",
    "mkdocs-include-markdown-plugin",
    "mkdocstrings[python]>=0.18",
    "pytest",
    "pytest-cov",
    "pipx",
    "pre-commit",
    "pytest-xdist",
    "griffe-pydantic!=1.1.3",
]

[tool.setuptools]
# Add minimal setuptools config if needed, e.g., to find packages if installing
# packages = ["sweagent", "tools", "tests"] # Might be needed if installing via pip
include-package-data = true

[tool.setuptools.packages.find]
where = ["."] # Search for packages in the root directory
include = ["sweagent*", "tools*", "tests*"] # Include the copied directories
namespaces = false
