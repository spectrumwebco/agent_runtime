# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from pkg.djangobridge import agent_service_pb2 as pkg_dot_djangobridge_dot_agent__service__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in pkg/djangobridge/agent_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AgentServiceStub(object):
    """AgentService provides a gRPC interface for interacting with the Django backend
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ExecuteTask = channel.unary_unary(
                '/djangobridge.AgentService/ExecuteTask',
                request_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.ExecuteTaskRequest.SerializeToString,
                response_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.ExecuteTaskResponse.FromString,
                _registered_method=True)
        self.QueryModel = channel.unary_unary(
                '/djangobridge.AgentService/QueryModel',
                request_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.QueryModelRequest.SerializeToString,
                response_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.QueryModelResponse.FromString,
                _registered_method=True)
        self.UpdateModel = channel.unary_unary(
                '/djangobridge.AgentService/UpdateModel',
                request_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.UpdateModelRequest.SerializeToString,
                response_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.UpdateModelResponse.FromString,
                _registered_method=True)
        self.CreateModel = channel.unary_unary(
                '/djangobridge.AgentService/CreateModel',
                request_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.CreateModelRequest.SerializeToString,
                response_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.CreateModelResponse.FromString,
                _registered_method=True)
        self.DeleteModel = channel.unary_unary(
                '/djangobridge.AgentService/DeleteModel',
                request_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.DeleteModelRequest.SerializeToString,
                response_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.DeleteModelResponse.FromString,
                _registered_method=True)
        self.ExecuteCommand = channel.unary_unary(
                '/djangobridge.AgentService/ExecuteCommand',
                request_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.ExecuteCommandRequest.SerializeToString,
                response_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.ExecuteCommandResponse.FromString,
                _registered_method=True)
        self.GetSettings = channel.unary_unary(
                '/djangobridge.AgentService/GetSettings',
                request_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.GetSettingsRequest.SerializeToString,
                response_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.GetSettingsResponse.FromString,
                _registered_method=True)
        self.ExecutePython = channel.unary_unary(
                '/djangobridge.AgentService/ExecutePython',
                request_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.ExecutePythonRequest.SerializeToString,
                response_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.ExecutePythonResponse.FromString,
                _registered_method=True)
        self.Log = channel.unary_unary(
                '/djangobridge.AgentService/Log',
                request_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.LogRequest.SerializeToString,
                response_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.LogResponse.FromString,
                _registered_method=True)


class AgentServiceServicer(object):
    """AgentService provides a gRPC interface for interacting with the Django backend
    """

    def ExecuteTask(self, request, context):
        """ExecuteTask executes a task using the Django agent
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryModel(self, request, context):
        """QueryModel queries a Django model
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateModel(self, request, context):
        """UpdateModel updates a Django model
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateModel(self, request, context):
        """CreateModel creates a new Django model instance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteModel(self, request, context):
        """DeleteModel deletes a Django model instance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteCommand(self, request, context):
        """ExecuteCommand executes a Django management command
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSettings(self, request, context):
        """GetSettings retrieves Django settings
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecutePython(self, request, context):
        """ExecutePython executes Python code in the Django environment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Log(self, request, context):
        """Log logs a message to the Django logger
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AgentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ExecuteTask': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteTask,
                    request_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.ExecuteTaskRequest.FromString,
                    response_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.ExecuteTaskResponse.SerializeToString,
            ),
            'QueryModel': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryModel,
                    request_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.QueryModelRequest.FromString,
                    response_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.QueryModelResponse.SerializeToString,
            ),
            'UpdateModel': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateModel,
                    request_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.UpdateModelRequest.FromString,
                    response_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.UpdateModelResponse.SerializeToString,
            ),
            'CreateModel': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateModel,
                    request_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.CreateModelRequest.FromString,
                    response_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.CreateModelResponse.SerializeToString,
            ),
            'DeleteModel': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteModel,
                    request_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.DeleteModelRequest.FromString,
                    response_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.DeleteModelResponse.SerializeToString,
            ),
            'ExecuteCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteCommand,
                    request_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.ExecuteCommandRequest.FromString,
                    response_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.ExecuteCommandResponse.SerializeToString,
            ),
            'GetSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSettings,
                    request_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.GetSettingsRequest.FromString,
                    response_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.GetSettingsResponse.SerializeToString,
            ),
            'ExecutePython': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecutePython,
                    request_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.ExecutePythonRequest.FromString,
                    response_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.ExecutePythonResponse.SerializeToString,
            ),
            'Log': grpc.unary_unary_rpc_method_handler(
                    servicer.Log,
                    request_deserializer=pkg_dot_djangobridge_dot_agent__service__pb2.LogRequest.FromString,
                    response_serializer=pkg_dot_djangobridge_dot_agent__service__pb2.LogResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'djangobridge.AgentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('djangobridge.AgentService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AgentService(object):
    """AgentService provides a gRPC interface for interacting with the Django backend
    """

    @staticmethod
    def ExecuteTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/djangobridge.AgentService/ExecuteTask',
            pkg_dot_djangobridge_dot_agent__service__pb2.ExecuteTaskRequest.SerializeToString,
            pkg_dot_djangobridge_dot_agent__service__pb2.ExecuteTaskResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/djangobridge.AgentService/QueryModel',
            pkg_dot_djangobridge_dot_agent__service__pb2.QueryModelRequest.SerializeToString,
            pkg_dot_djangobridge_dot_agent__service__pb2.QueryModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/djangobridge.AgentService/UpdateModel',
            pkg_dot_djangobridge_dot_agent__service__pb2.UpdateModelRequest.SerializeToString,
            pkg_dot_djangobridge_dot_agent__service__pb2.UpdateModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/djangobridge.AgentService/CreateModel',
            pkg_dot_djangobridge_dot_agent__service__pb2.CreateModelRequest.SerializeToString,
            pkg_dot_djangobridge_dot_agent__service__pb2.CreateModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/djangobridge.AgentService/DeleteModel',
            pkg_dot_djangobridge_dot_agent__service__pb2.DeleteModelRequest.SerializeToString,
            pkg_dot_djangobridge_dot_agent__service__pb2.DeleteModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecuteCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/djangobridge.AgentService/ExecuteCommand',
            pkg_dot_djangobridge_dot_agent__service__pb2.ExecuteCommandRequest.SerializeToString,
            pkg_dot_djangobridge_dot_agent__service__pb2.ExecuteCommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/djangobridge.AgentService/GetSettings',
            pkg_dot_djangobridge_dot_agent__service__pb2.GetSettingsRequest.SerializeToString,
            pkg_dot_djangobridge_dot_agent__service__pb2.GetSettingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecutePython(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/djangobridge.AgentService/ExecutePython',
            pkg_dot_djangobridge_dot_agent__service__pb2.ExecutePythonRequest.SerializeToString,
            pkg_dot_djangobridge_dot_agent__service__pb2.ExecutePythonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Log(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/djangobridge.AgentService/Log',
            pkg_dot_djangobridge_dot_agent__service__pb2.LogRequest.SerializeToString,
            pkg_dot_djangobridge_dot_agent__service__pb2.LogResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
