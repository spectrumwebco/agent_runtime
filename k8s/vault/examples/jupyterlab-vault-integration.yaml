apiVersion: v1
kind: ServiceAccount
metadata:
  name: jupyterlab
  namespace: jupyter
---
apiVersion: v1
kind: Secret
metadata:
  name: jupyterlab-vault-credentials
  namespace: jupyter
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/agent-inject-secret-db-creds: "database/creds/ml-app"
    vault.hashicorp.com/agent-inject-template-db-creds: |
      {{- with secret "database/creds/ml-app" -}}
      export POSTGRES_USER="{{ .Data.username }}"
      export POSTGRES_PASSWORD="{{ .Data.password }}"
      {{- end -}}
    vault.hashicorp.com/agent-inject-secret-jupyterlab-config: "kv/data/jupyterlab/config"
    vault.hashicorp.com/agent-inject-template-jupyterlab-config: |
      {{- with secret "kv/data/jupyterlab/config" -}}
      export MLFLOW_TRACKING_URI="{{ .Data.data.mlflow_tracking_uri }}"
      export AWS_ENDPOINT_URL="{{ .Data.data.s3_endpoint_url }}"
      {{- end -}}
    vault.hashicorp.com/role: "jupyterlab"
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyterlab
  namespace: jupyter
  labels:
    app: jupyterlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyterlab
  template:
    metadata:
      labels:
        app: jupyterlab
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-secret-db-creds: "database/creds/ml-app"
        vault.hashicorp.com/agent-inject-template-db-creds: |
          {{- with secret "database/creds/ml-app" -}}
          export POSTGRES_USER="{{ .Data.username }}"
          export POSTGRES_PASSWORD="{{ .Data.password }}"
          {{- end -}}
        vault.hashicorp.com/agent-inject-secret-jupyterlab-config: "kv/data/jupyterlab/config"
        vault.hashicorp.com/agent-inject-template-jupyterlab-config: |
          {{- with secret "kv/data/jupyterlab/config" -}}
          export MLFLOW_TRACKING_URI="{{ .Data.data.mlflow_tracking_uri }}"
          export AWS_ENDPOINT_URL="{{ .Data.data.s3_endpoint_url }}"
          {{- end -}}
        vault.hashicorp.com/role: "jupyterlab"
    spec:
      serviceAccountName: jupyterlab
      containers:
      - name: jupyterlab
        image: jupyter/datascience-notebook:latest
        ports:
        - containerPort: 8888
        command: ["/bin/sh", "-c"]
        args:
        - |
          source /vault/secrets/db-creds
          source /vault/secrets/jupyterlab-config
          
          cat > ~/.jupyter/postgres_connection.py << EOF
          import os
          import psycopg2
          
          def get_postgres_connection():
              """
              Returns a connection to the PostgreSQL database managed by the CrunchyData operator.
              """
              conn = psycopg2.connect(
                  host="ml-postgres-cluster.postgres-operator.svc.cluster.local",
                  port=5432,
                  database="jupyterlab",
                  user=os.environ.get("POSTGRES_USER"),
                  password=os.environ.get("POSTGRES_PASSWORD")
              )
              return conn
          
          def execute_query(query, params=None):
              """
              Executes a query on the PostgreSQL database.
              """
              conn = get_postgres_connection()
              try:
                  cur = conn.cursor()
                  cur.execute(query, params)
                  conn.commit()
                  return cur.fetchall()
              finally:
                  conn.close()
          EOF
          
          start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''
        env:
        - name: JUPYTER_ENABLE_LAB
          value: "yes"
        volumeMounts:
        - name: jupyter-data
          mountPath: /home/jovyan/work
        - name: jupyter-config
          mountPath: /home/jovyan/.jupyter
        resources:
          limits:
            cpu: "4"
            memory: "16Gi"
            nvidia.com/gpu: "1"
          requests:
            cpu: "2"
            memory: "8Gi"
      volumes:
      - name: jupyter-data
        persistentVolumeClaim:
          claimName: jupyter-data-pvc
      - name: jupyter-config
        configMap:
          name: jupyter-config
