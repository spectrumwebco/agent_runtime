apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeflow
  namespace: kubeflow
---
apiVersion: kubeflow.org/v1
kind: PyTorchJob
metadata:
  name: llama4-fine-tuning-job
  namespace: kubeflow
spec:
  pytorchReplicaSpecs:
    Master:
      replicas: 1
      restartPolicy: OnFailure
      template:
        metadata:
          annotations:
            vault.hashicorp.com/agent-inject: "true"
            vault.hashicorp.com/agent-inject-secret-kubeflow-config: "kv/data/kubeflow/config"
            vault.hashicorp.com/agent-inject-template-kubeflow-config: |
              {{- with secret "kv/data/kubeflow/config" -}}
              export MLFLOW_TRACKING_URI="{{ .Data.data.mlflow_tracking_uri }}"
              export S3_ENDPOINT_URL="{{ .Data.data.s3_endpoint_url }}"
              {{- end -}}
            vault.hashicorp.com/role: "kubeflow"
        spec:
          serviceAccountName: kubeflow
          containers:
            - name: pytorch
              image: fine-tune/llama4-training:latest
              command:
                - "/bin/sh"
                - "-c"
                - |
                  source /vault/secrets/kubeflow-config
                  python -m torch.distributed.launch --nproc_per_node=1 train.py \
                    --model-type llama4-maverick \
                    --data-path /data/training/combined_training_data.json \
                    --output-dir /models/llama4-maverick \
                    --epochs 3 \
                    --learning-rate 5e-5 \
                    --batch-size 8 \
                    --mlflow-tracking-uri $MLFLOW_TRACKING_URI
              resources:
                limits:
                  nvidia.com/gpu: 1
                  memory: "32Gi"
                  cpu: "8"
                requests:
                  memory: "16Gi"
                  cpu: "4"
              volumeMounts:
                - name: data-volume
                  mountPath: /data
                - name: models-volume
                  mountPath: /models
                - name: config-volume
                  mountPath: /config
          volumes:
            - name: data-volume
              persistentVolumeClaim:
                claimName: data-pvc
            - name: models-volume
              persistentVolumeClaim:
                claimName: models-pvc
            - name: config-volume
              configMap:
                name: llama4-training-config
    Worker:
      replicas: 2
      restartPolicy: OnFailure
      template:
        metadata:
          annotations:
            vault.hashicorp.com/agent-inject: "true"
            vault.hashicorp.com/agent-inject-secret-kubeflow-config: "kv/data/kubeflow/config"
            vault.hashicorp.com/agent-inject-template-kubeflow-config: |
              {{- with secret "kv/data/kubeflow/config" -}}
              export MLFLOW_TRACKING_URI="{{ .Data.data.mlflow_tracking_uri }}"
              export S3_ENDPOINT_URL="{{ .Data.data.s3_endpoint_url }}"
              {{- end -}}
            vault.hashicorp.com/role: "kubeflow"
        spec:
          serviceAccountName: kubeflow
          containers:
            - name: pytorch
              image: fine-tune/llama4-training:latest
              command:
                - "/bin/sh"
                - "-c"
                - |
                  source /vault/secrets/kubeflow-config
                  python -m torch.distributed.launch --nproc_per_node=1 train.py \
                    --model-type llama4-maverick \
                    --data-path /data/training/combined_training_data.json \
                    --output-dir /models/llama4-maverick \
                    --epochs 3 \
                    --learning-rate 5e-5 \
                    --batch-size 8 \
                    --mlflow-tracking-uri $MLFLOW_TRACKING_URI
              resources:
                limits:
                  nvidia.com/gpu: 1
                  memory: "32Gi"
                  cpu: "8"
                requests:
                  memory: "16Gi"
                  cpu: "4"
              volumeMounts:
                - name: data-volume
                  mountPath: /data
                - name: models-volume
                  mountPath: /models
                - name: config-volume
                  mountPath: /config
          volumes:
            - name: data-volume
              persistentVolumeClaim:
                claimName: data-pvc
            - name: models-volume
              persistentVolumeClaim:
                claimName: models-pvc
            - name: config-volume
              configMap:
                name: llama4-training-config
