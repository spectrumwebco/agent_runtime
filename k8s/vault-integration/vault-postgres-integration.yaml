apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-postgres-integration
  namespace: postgres-operator
data:
  vault-integration.sh: |
    
    
    until curl -s -o /dev/null -w "%{http_code}" ${VAULT_ADDR}/v1/sys/health | grep 200; do
      echo "Waiting for Vault to be ready..."
      sleep 5
    done
    
    curl -s \
      --header "X-Vault-Token: ${VAULT_TOKEN}" \
      --request POST \
      --data '{"type": "database"}' \
      ${VAULT_ADDR}/v1/sys/mounts/database
    
    curl -s \
      --header "X-Vault-Token: ${VAULT_TOKEN}" \
      --request POST \
      --data '{
        "plugin_name": "postgresql-database-plugin",
        "allowed_roles": "ml-app",
        "connection_url": "postgresql://{{username}}:{{password}}@postgres-cluster.postgres-operator.svc.cluster.local:5432/postgres?sslmode=disable",
        "username": "postgres",
        "password": "${POSTGRES_PASSWORD}"
      }' \
      ${VAULT_ADDR}/v1/database/config/postgres-cluster
    
    curl -s \
      --header "X-Vault-Token: ${VAULT_TOKEN}" \
      --request POST \
      --data '{
        "db_name": "postgres-cluster",
        "creation_statements": ["CREATE ROLE \"{{name}}\" WITH LOGIN PASSWORD \"{{password}}\" VALID UNTIL \"{{expiration}}\"; GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO \"{{name}}\"; GRANT USAGE ON SCHEMA public TO \"{{name}}\";"],
        "default_ttl": "1h",
        "max_ttl": "24h"
      }' \
      ${VAULT_ADDR}/v1/database/roles/ml-app
    
    echo "Vault PostgreSQL integration configured successfully"
