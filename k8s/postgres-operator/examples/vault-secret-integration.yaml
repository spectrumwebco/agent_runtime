apiVersion: v1
kind: ServiceAccount
metadata:
  name: postgres-vault-integration
  namespace: postgres-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: postgres-vault-integration
  namespace: postgres-operator
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["postgres-operator.crunchydata.com"]
  resources: ["postgresclusters"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: postgres-vault-integration
  namespace: postgres-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: postgres-vault-integration
subjects:
- kind: ServiceAccount
  name: postgres-vault-integration
  namespace: postgres-operator
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-vault-rotation
  namespace: postgres-operator
spec:
  schedule: "0 */6 * * *"  # Run every 6 hours
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: postgres-vault-integration
          containers:
          - name: vault-rotation
            image: hashicorp/vault:1.13.0
            command: ["/bin/sh", "-c"]
            args:
            - |
              vault login -method=kubernetes \
                role=postgres-vault-integration \
                jwt=/var/run/secrets/kubernetes.io/serviceaccount/token
              
              vault write -force database/rotate-root/postgres-cluster
              
              echo "PostgreSQL credentials rotated successfully"
            env:
            - name: VAULT_ADDR
              value: "http://vault.vault.svc.cluster.local:8200"
            resources:
              limits:
                cpu: 200m
                memory: 256Mi
              requests:
                cpu: 100m
                memory: 128Mi
          restartPolicy: OnFailure
