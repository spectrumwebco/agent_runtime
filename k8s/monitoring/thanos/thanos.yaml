apiVersion: v1
kind: ConfigMap
metadata:
  name: thanos-config
  namespace: monitoring
data:
  thanos-receive.yaml: |
    type: RECEIVE
    receive:
      http_address: 0.0.0.0:10902
      grpc_address: 0.0.0.0:10901
      remote_write:
        address: 0.0.0.0:19291
      tsdb:
        path: /var/thanos/receive
        retention: 24h
      replication_factor: 2
    objstore:
      type: S3
      config:
        bucket: thanos
        endpoint: minio.monitoring.svc.cluster.local:9000
        access_key: minio
        secret_key: minio123
        insecure: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: thanos-query-config
  namespace: monitoring
data:
  thanos-query.yaml: |
    type: QUERY
    query:
      http_address: 0.0.0.0:9090
      grpc_address: 0.0.0.0:10901
      store:
        - thanos-store-gateway.monitoring.svc.cluster.local:10901
        - thanos-receive.monitoring.svc.cluster.local:10901
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: thanos-store-config
  namespace: monitoring
data:
  thanos-store.yaml: |
    type: STORE
    store:
      tsdb:
        path: /var/thanos/store
      grpc_address: 0.0.0.0:10901
      http_address: 0.0.0.0:10902
    objstore:
      type: S3
      config:
        bucket: thanos
        endpoint: minio.monitoring.svc.cluster.local:9000
        access_key: minio
        secret_key: minio123
        insecure: true
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: thanos-receive
  namespace: monitoring
  labels:
    app: thanos-receive
spec:
  serviceName: thanos-receive
  replicas: 2
  selector:
    matchLabels:
      app: thanos-receive
  template:
    metadata:
      labels:
        app: thanos-receive
    spec:
      containers:
      - name: thanos-receive
        image: quay.io/thanos/thanos:v0.32.2
        args:
        - receive
        - --receive.local-endpoint=$(POD_NAME).thanos-receive.monitoring.svc.cluster.local:10901
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:10902
        - --receive.replication-factor=2
        - --tsdb.path=/var/thanos/receive
        - --tsdb.retention=24h
        - --label=replica="$(POD_NAME)"
        - --label=receive="true"
        - --objstore.config-file=/etc/thanos/thanos-receive.yaml
        ports:
        - name: http
          containerPort: 10902
        - name: grpc
          containerPort: 10901
        - name: remote-write
          containerPort: 19291
        volumeMounts:
        - name: thanos-receive-data
          mountPath: /var/thanos/receive
        - name: thanos-config
          mountPath: /etc/thanos
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 2Gi
      volumes:
      - name: thanos-config
        configMap:
          name: thanos-config
  volumeClaimTemplates:
  - metadata:
      name: thanos-receive-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-query
  namespace: monitoring
  labels:
    app: thanos-query
spec:
  replicas: 2
  selector:
    matchLabels:
      app: thanos-query
  template:
    metadata:
      labels:
        app: thanos-query
    spec:
      containers:
      - name: thanos-query
        image: quay.io/thanos/thanos:v0.32.2
        args:
        - query
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:9090
        - --query.replica-label=replica
        - --store=thanos-store-gateway.monitoring.svc.cluster.local:10901
        - --store=thanos-receive-0.thanos-receive.monitoring.svc.cluster.local:10901
        - --store=thanos-receive-1.thanos-receive.monitoring.svc.cluster.local:10901
        ports:
        - name: http
          containerPort: 9090
        - name: grpc
          containerPort: 10901
        volumeMounts:
        - name: thanos-query-config
          mountPath: /etc/thanos
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
      volumes:
      - name: thanos-query-config
        configMap:
          name: thanos-query-config
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: thanos-store-gateway
  namespace: monitoring
  labels:
    app: thanos-store-gateway
spec:
  serviceName: thanos-store-gateway
  replicas: 1
  selector:
    matchLabels:
      app: thanos-store-gateway
  template:
    metadata:
      labels:
        app: thanos-store-gateway
    spec:
      containers:
      - name: thanos-store-gateway
        image: quay.io/thanos/thanos:v0.32.2
        args:
        - store
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:10902
        - --data-dir=/var/thanos/store
        - --objstore.config-file=/etc/thanos/thanos-store.yaml
        ports:
        - name: http
          containerPort: 10902
        - name: grpc
          containerPort: 10901
        volumeMounts:
        - name: thanos-store-data
          mountPath: /var/thanos/store
        - name: thanos-store-config
          mountPath: /etc/thanos
        resources:
          requests:
            cpu: 200m
            memory: 1Gi
          limits:
            cpu: 500m
            memory: 2Gi
      volumes:
      - name: thanos-store-config
        configMap:
          name: thanos-store-config
  volumeClaimTemplates:
  - metadata:
      name: thanos-store-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-receive
  namespace: monitoring
  labels:
    app: thanos-receive
spec:
  ports:
  - port: 10902
    targetPort: 10902
    name: http
  - port: 10901
    targetPort: 10901
    name: grpc
  - port: 19291
    targetPort: 19291
    name: remote-write
  selector:
    app: thanos-receive
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-query
  namespace: monitoring
  labels:
    app: thanos-query
spec:
  ports:
  - port: 9090
    targetPort: 9090
    name: http
  - port: 10901
    targetPort: 10901
    name: grpc
  selector:
    app: thanos-query
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-store-gateway
  namespace: monitoring
  labels:
    app: thanos-store-gateway
spec:
  ports:
  - port: 10902
    targetPort: 10902
    name: http
  - port: 10901
    targetPort: 10901
    name: grpc
  selector:
    app: thanos-store-gateway
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: monitoring
  labels:
    app: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio:RELEASE.2023-07-21T21-12-44Z
        args:
        - server
        - /data
        - --console-address
        - :9001
        env:
        - name: MINIO_ROOT_USER
          value: "minio"
        - name: MINIO_ROOT_PASSWORD
          value: "minio123"
        ports:
        - containerPort: 9000
          name: api
        - containerPort: 9001
          name: console
        volumeMounts:
        - name: minio-data
          mountPath: /data
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 200m
            memory: 1Gi
      volumes:
      - name: minio-data
        persistentVolumeClaim:
          claimName: minio-data
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: monitoring
  labels:
    app: minio
spec:
  ports:
  - port: 9000
    targetPort: 9000
    name: api
  - port: 9001
    targetPort: 9001
    name: console
  selector:
    app: minio
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-data
  namespace: monitoring
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
