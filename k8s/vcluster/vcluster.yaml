apiVersion: v1
kind: Namespace
metadata:
  name: vcluster-system
  labels:
    app.kubernetes.io/name: vcluster
    app.kubernetes.io/part-of: agent-runtime
    app.kubernetes.io/managed-by: terraform
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vcluster-config
  namespace: vcluster-system
  labels:
    app.kubernetes.io/name: vcluster
    app.kubernetes.io/part-of: agent-runtime
data:
  config.yaml: |
    vcluster:
      image: rancher/k3s:v1.21.4-k3s1
      imagePullPolicy: Always
    networking:
      hostPort: 8443
      containerPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vcluster-controller
  namespace: vcluster-system
  labels:
    app.kubernetes.io/name: vcluster
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: agent-runtime
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vcluster
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vcluster
        app.kubernetes.io/component: controller
        app.kubernetes.io/part-of: agent-runtime
    spec:
      serviceAccountName: vcluster-controller
      containers:
      - name: controller
        image: rancher/k3s:v1.21.4-k3s1
        imagePullPolicy: Always
        args:
        - --config=/etc/vcluster/config.yaml
        volumeMounts:
        - name: config
          mountPath: /etc/vcluster
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
      volumes:
      - name: config
        configMap:
          name: vcluster-config
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vcluster-controller
  namespace: vcluster-system
  labels:
    app.kubernetes.io/name: vcluster
    app.kubernetes.io/part-of: agent-runtime
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vcluster-controller
  labels:
    app.kubernetes.io/name: vcluster
    app.kubernetes.io/part-of: agent-runtime
rules:
- apiGroups: [""]
  resources: ["namespaces", "pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "daemonsets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vcluster-controller
  labels:
    app.kubernetes.io/name: vcluster
    app.kubernetes.io/part-of: agent-runtime
subjects:
- kind: ServiceAccount
  name: vcluster-controller
  namespace: vcluster-system
roleRef:
  kind: ClusterRole
  name: vcluster-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: vcluster-webhook
  namespace: vcluster-system
  labels:
    app.kubernetes.io/name: vcluster
    app.kubernetes.io/component: webhook
    app.kubernetes.io/part-of: agent-runtime
spec:
  selector:
    app.kubernetes.io/name: vcluster
    app.kubernetes.io/component: controller
  ports:
  - port: 443
    targetPort: 8443
    name: webhook
  type: ClusterIP
